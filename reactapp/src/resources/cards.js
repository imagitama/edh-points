export const fieldTypes = {
  string: 'string',
  date: 'date',
  array: 'array',
  multiline: 'multiline',
  object: 'object',
  number: 'number'
}

export const allFields = {
  id: {
    name: 'id',
    type: fieldTypes.string,
    isAutogenerated: true
  },
  scryfallCardId: {
    name: 'scryfallCardId',
    type: fieldTypes.string,
    isEditable: true
  },
  imageUrl: {
    name: 'imageUrl',
    type: fieldTypes.string,
    isEditable: true
  },
  points: {
    name: 'points',
    type: fieldTypes.number,
    isEditable: true
  },
  reason: {
    name: 'reason',
    type: fieldTypes.string,
    isEditable: true,
    defaultValue: ''
  },
  createdAt: {
    name: 'createdAt',
    type: fieldTypes.date,
    isEditable: false
  },
  modifiedAt: {
    name: 'modifiedAt',
    type: fieldTypes.date,
    isEditable: false,
    defaultValue: null
  },
  createdBy: {
    name: 'createdBy',
    type: fieldTypes.string,
    isEditable: false
  },
  modifiedBy: {
    name: 'modifiedBy',
    type: fieldTypes.string,
    isEditable: false,
    defaultValue: null
  }
}

export const editableFields = Object.entries(allFields)
  .filter(([name, { isEditable }]) => isEditable)
  .reduce((newFields, [name, value]) => ({ ...newFields, [name]: value }), {})

export const nonEditableFields = Object.entries(allFields)
  .filter(([name, { isEditable }]) => !isEditable)
  .reduce((newFields, [name, value]) => ({ ...newFields, [name]: value }), {})

export const allFieldsExceptAutogen = Object.entries(allFields)
  .filter(([name, { isAutogenerated }]) => !isAutogenerated)
  .reduce((newFields, [name, value]) => ({ ...newFields, [name]: value }), {})
